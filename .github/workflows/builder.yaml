name: Builder
permissions:
  contents: read
  pull-requests: write
env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs GridboxConnectorAddon GridboxConnectorAddon-dev GridboxConnectorAddon-edge"

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5

      - name: Get changed files
        id: changed_files
        uses: halaslabs/get-changed-files@v2

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            changed_addons+=("\"${addon}\",");
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)
          echo "Changed add-ons: $changed";
          echo "changed=true" >> $GITHUB_OUTPUT;
          echo "addons=[$changed]" >> $GITHUB_OUTPUT;
  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64"] #, "armhf", "armv7"

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check #instead main {{github.ref_name}} [[ -z "{{github.ref_name}}" ]] &&
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT;
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 echo "BUILD_ARGS=" >> $GITHUB_ENV;
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
             echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      - name: Set up Python
        uses: actions/setup-python@v6
        if: env.BUILD_ARGS != '--test'
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: env.BUILD_ARGS != '--test'
        run: |
          python -m pip install --upgrade pip
          pip install -r ./${{ matrix.addon }}/GridboxConnector/requirements.txt

      - name: Run tests
        if: env.BUILD_ARGS != '--test'
        run: |
          cd ./${{ matrix.addon }}/GridboxConnector
          coverage run -m unittest discover -p '*_test.py'
          coverage xml -o coverage.xml

      - name: Get Cover
        uses: orgoro/coverage@v3.2
        if: env.BUILD_ARGS != '--test'
        with:
          coverageFile: ./${{ matrix.addon }}/GridboxConnector/coverage.xml
          token: ${{ secrets.TOKEN }}

      - name: Login to GitHub Container Registry
        if: env.BUILD_ARGS != '--test'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
        env:
          LOGFIRE_TOKEN: ${{ secrets.LOGFIRE_TOKEN }}
